env_files = [
    "./.env"
]

[tasks.install-cargo-watch]
install_crate = { crate_name = "cargo-watch", binary = "cargo", test_arg = ["watch", "--version"] }
command = "cargo"
args = ["watch", "--version"]

[tasks.docker-compose-up]
description = "Make docker swarm up and running"
# Never run as independent task
private = true
cwd = "./docker"
workspace = false
command = "docker-compose"
args = [
    "up", "-d"
]

[tasks.monq-setup]
description = "Setup monq index"
workspace = false
command = "cargo"
args = [
    "run",
    "--bin", "monq", "setup"
]

[tasks.monq-seed]
description = "Seed data"
workspace = false
command = "cargo"
args = [
    "run",
    "--bin", "monq", "seed",
    "--doc", "db/what-is-monq.json"
]

[tasks.setup-flow]
description = "Set up index"
workspace = false
script = [
    "cargo make monq-setup",
    "cargo make monq-seed"
]

[tasks.check-index]
description = "Make sure the existence of index"
condtion = { env_set = ["ES_HOST", "ES_PORT"] }
dependencies = ["docker-compose-up"]
workspace = false
command = "curl"
args = [
    "-I", "localhost:9200/monq?pretty"
]

[tasks.create-index]
description = "Create index"
dependencies = ["docker-compose-up"]
cwd = "./docker/elasticsearch"
workspace = false
condtion = { env_set = ["ES_HOST", "ES_PORT"]}
command = "curl"
args = [
    "-X", "PUT", "${ES_HOST}:${ES_PORT}/monq",
    "-H", "Content-Type: application/json",
    "-d", "@index.json"
]

[tasks.delete-index]
description = "Delete index"
dependencies = ["docker-compose-up"]
workspace = false
command = "curl"
args = [
    "-X", "DELETE", "${ES_HOST}:${ES_PORT}/monq?pretty",
]

[tasks.put-doc]
description = "Put document to index monq"
workspace = false
command = "curl"
args = [
    "-X", "PUT", "${ES_HOST}:${ES_PORT}/monq/_doc/1?pretty=true",
    "-H", "Content-Type: application/json",
    "-d", "@${@}"
]

# Query DSL
[tasks.search]
workspace = false
command = "curl"
args = [
    "-X", "GET", "localhost:9200/_search?pretty",
    "-H", "Content-Type: application/json",
    "-d", "@${@}"
]

[tasks.all-docs]
description = "Get all document"
workspace = false
command = "curl"
args = [
    "-XGET", "localhost:9200/_search?pretty",
    "-H", "Content-Type: application/json",
    "-d", "@fixture/search/all-docs.json"
]

[tasks.test-sudachi]
description = "Test sudachi analyzer"
dependencies = ["docker-compose-up"]
workspace = false
command = "curl"
args = [
    "-X", "POST", "localhost:9200/monq/_analyze?pretty",
    "-H", "Content-Type: application/json",
    "-d", "@${@}"
]

[tasks.start]
description = "Run serve in development mode"
# only run if PORT  is set, otherwise skipped
condition = { env_set = [ "PORT" ] }
# run in specified directory
# cwd = "./backend"
workspace = false
dependencies = ["docker-compose-up", "install-cargo-watch"]
install_crate = "systemfd"
command = "systemfd"
args = [
    "--no-pid",
    "-s", "http::${PORT}",
    "--",
    "cargo", "watch", "-x", "run --bin backend"
]

[tasks.dashboard_dev]
description = "build and serve dashboard in dev mode"
workspace = false
install_crate = { crate_name = "wasm-pack", binary = "wasm-pack", test_arg = "-V" }
command = "wasm-pack"
args = [
    "build", "monq_dashboard",
    "--out-name", "package",
    "--dev"]
watch = true

# postcss-typed-css-classes 
[tasks.build_dashboard]
description = "Generate a const file for tailwind classes"
workspace = false
cwd = "./monq_dashboard/tailwind"
command = "npx"
args = [
    "webpack",
    "--config webpack.config", 
    "--mode=development"
]